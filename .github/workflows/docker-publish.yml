name: Docker Publish

on:
  push:
    branches: [ "main", "beta" ] # Trigger on pushes to the main and beta branches
    tags:
      - 'v*' # Also trigger on version tags like v1.0.0, v1.2.3, etc.

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 24
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'
        cache: maven

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          # Tag 'latest' only on the default branch (main)
          type=raw,value=latest,enable={{is_default_branch}}
          # Tag 'beta' when building from the beta branch
          type=raw,value=beta,enable=${{ github.ref == 'refs/heads/beta' }}
          # Also tag with the branch name (e.g., 'main', 'beta')
          type=ref,event=branch
          # Tag semver versions when building from tags like v1.2.3
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          # Always include a short SHA tag
          type=sha,format=short

    # Build the JAR once to be used by both image builds.
    # This avoids compiling the code twice.
    - name: Build JAR with Maven
      run: mvn -B package --file pom.xml

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # This command now uses the JAR built in the "Build JAR" step, making it much faster.
    # We also name the image directly to avoid a separate 'docker tag' command.
    - name: Build and push amd64 image
      run: |
        TAGS=$(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ',')
        mvn spring-boot:build-image -Dspring-boot.build-image.imageName=ghcr.io/${{ github.repository }} -Dspring-boot.build-image.tags=${TAGS} -Dspring-boot.build-image.publish=true